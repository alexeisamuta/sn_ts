{"version":3,"sources":["componens/Dialogs/Dialogs.module.css","componens/Dialogs/DialogsItem/DialogsItems.tsx","componens/Dialogs/Message/Message.tsx","componens/Dialogs/Dialogs.tsx","componens/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogsItem","props","className","s","dialog","active","to","id","name","Message","message","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messageElements","messages","m","dialogsItems","AddMessageFormRedux","onSubmit","values","onSendMessageClick","newMessageBody","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","validate","required","placeholder","compose","withAuthRedirect","connect","state","dispatch","sendMessageAC"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCYpMC,MAPf,SAAqBC,GACjB,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,QCGzCC,MARf,SAAiBR,GACb,OACI,6BACA,yBAAKC,UAAWC,IAAEO,SAAUT,EAAMS,W,kCCiC3BC,MAxBf,SAAiBV,GAEb,IAAIW,EAAkBX,EAAMY,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAaR,KAAMQ,EAAER,KAAMD,GAAIS,EAAET,QACtFU,EAAkBhB,EAAMY,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAST,QAASS,EAAET,aAQ9E,OACI,yBAAKR,UAAWC,IAAEW,SACd,yBAAKZ,UAAWC,IAAEiB,cACbR,GAEL,yBAAKV,UAAWC,IAAEe,UACd,6BAAMD,IAEV,kBAACI,EAAD,CAAqBC,SAZT,SAACC,GACjBtB,EAAMuB,mBAAmBD,EAAOE,qBAkBlCC,EAAYC,YAAiB,IAkB7BN,EAAsBO,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAAC3B,GACpB,OACI,0BAAMqB,SAAUrB,EAAM6B,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUT,GACrBlB,KAAM,iBACN4B,YAAY,wBAEvB,6BACI,6C,wBC3BDC,sBAAQC,IAAkBC,aAfnB,SAACC,GACnB,MAAO,CACH3B,YAAa2B,EAAM3B,gBAIF,SAAC4B,GACtB,MAAO,CACHjB,mBAAoB,SAACC,GACjBgB,EAASC,YAAcjB,SAMpBY,CAAuE1B","file":"static/js/3.32edbcd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1WkOB\",\"dialogsItems\":\"Dialogs_dialogsItems__2Oi3U\",\"active\":\"Dialogs_active__aVtC0\",\"dialog\":\"Dialogs_dialog__3KjrB\",\"messages\":\"Dialogs_messages__237Ed\",\"message\":\"Dialogs_message__hARlM\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {dialogsType} from \"../../../redux/store\";\r\n\r\n\r\nfunction DialogsItem(props:dialogsType) {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogsItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {messagesType} from \"../../../redux/store\";\r\n\r\nfunction Message(props: messagesType) {\r\n    return (\r\n        <div>\r\n        <div className={s.message}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogsItem from \"./DialogsItem/DialogsItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {ActionsTypes, dialogsPageType} from \"../../redux/store\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\ntype DialogsType = {\r\n    dialogsPage: dialogsPageType\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nfunction Dialogs(props: DialogsType) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messageElements = props.dialogsPage.messages.map(m => <Message message={m.message}/>)\r\n\r\n    // if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.onSendMessageClick(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength]}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogsItem from \"./DialogsItem/DialogsItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {ActionsTypes, dialogsPageType} from \"../../redux/store\";\r\nimport {sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody: string) => {\r\n            dispatch(sendMessageAC(newMessageBody))\r\n        }\r\n    }\r\n}\r\n//\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps,mapDispatchToProps))(Dialogs);"],"sourceRoot":""}